[{"D:\\del\\myprog\\src\\index.js":"1","D:\\del\\myprog\\src\\reportWebVitals.js":"2","D:\\del\\myprog\\src\\App.js":"3","D:\\del\\myprog\\src\\Redux\\store.js":"4","D:\\del\\myprog\\src\\Redux\\booksReducer.js":"5","D:\\del\\myprog\\src\\api\\api.js":"6","D:\\del\\myprog\\src\\Components\\BooksContainer.js":"7","D:\\del\\myprog\\src\\Components\\NavMenu.js":"8","D:\\del\\myprog\\src\\Components\\Books.js":"9","D:\\del\\myprog\\src\\Components\\MenuFilter.js":"10","D:\\del\\myprog\\src\\Components\\Favourites.js":"11"},{"size":766,"mtime":1608067566917,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":5276,"mtime":1608247924027,"results":"15","hashOfConfig":"13"},{"size":541,"mtime":1607810474631,"results":"16","hashOfConfig":"13"},{"size":4544,"mtime":1608133428873,"results":"17","hashOfConfig":"13"},{"size":2303,"mtime":1607893430519,"results":"18","hashOfConfig":"13"},{"size":586,"mtime":1608125249266,"results":"19","hashOfConfig":"13"},{"size":2336,"mtime":1608247888926,"results":"20","hashOfConfig":"13"},{"size":3499,"mtime":1608133648450,"results":"21","hashOfConfig":"13"},{"size":3529,"mtime":1608070247008,"results":"22","hashOfConfig":"13"},{"size":687,"mtime":1608130234864,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"8567rc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\del\\myprog\\src\\index.js",[],["51","52"],"D:\\del\\myprog\\src\\reportWebVitals.js",[],"D:\\del\\myprog\\src\\App.js",["53","54"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Favourites from './Components/Favourites';\nimport NavMenu from './Components/NavMenu';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport {Loader} from 'semantic-ui-react'\nimport { searchBooksThunk, favouritesBookThunk, updateFavouritesBookActionCreator } from './Redux/booksReducer';\nimport MenuFilter from './Components/MenuFilter';\nconst BooksContainer = React.lazy(() => import('./Components/BooksContainer'))\n\n\nconst App = (props) => {\n\n  const [query, setQuery] = useState('search+terms');\n  const [filter, setFilter] = useState('');\n  const [printType, setPrintType] = useState('all');\n  const [orderBy, setOrderBy] = useState(false);\n  const [langRestrict, setLangRestrict] = useState(false);\n    \n  // start search\n  useEffect(() => {\n      props.searchBooksThunk('search+terms', 0);\n  },[]);\n\n  // LocalStorage\n  useEffect(() => {\n    const myFavouritesBooks = JSON.parse(localStorage.getItem('mybooks'));\n\n    if (!!myFavouritesBooks) {\n      props.updateFavouritesBookActionCreator(myFavouritesBooks);      \n    }\n\n  }, []);\n  \n  \n  // Search\n  const onSearch = () => {\n    if (String(query).length === 0 || String(query).length === 'search+terms') { \n      props.searchBooksThunk('search+terms', 0, filter, printType, orderBy, langRestrict);\n    } else {\n      props.searchBooksThunk(query, 0, filter, printType, orderBy, langRestrict);\n    }\n  };\n\n  // Pagination\n  const onClick = () => {\n    console.log('true')\n    const startIndex0 = props.startIndex + props.maxResults;\n    props.searchBooksThunk(query, startIndex0, filter, printType, orderBy, langRestrict);\n  };\n\n  const onScroll = (event) => {\n      // (window.innerHeight + window.scrollY) >= (document.body.offsetHeight - 500)\n      // (window.innerHeight + window.pageYOffset) >= (document.body.offsetHeight + 500)\n      event.target.scrollingElement.scrollTop >= event.target.scrollingElement.scrollHeight - event.target.scrollingElement.offsetHeight - 200\n      && props.books.length\n      && !props.isLoading\n      && !props.isError\n      && onClick();\n    }\n\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll, false);\n    return () => window.removeEventListener('scroll', onScroll, false);\n  });\n\n  // Checkbox filter\n  const filterChange = (e) => setFilter(e.currentTarget.firstChild.defaultValue)\n\n  // Checkbox printType\n  const printTypeChange = (e) => setPrintType(e.currentTarget.firstChild.defaultValue)\n\n  // radio orderByChange\n  const orderByChange = () => setOrderBy(!orderBy);\n\n  // radio lang\n  const langChange = () => setLangRestrict(!langRestrict);\n\n  return (\n    <container className={`wrapper`}> \n      <section className={'wrapper2'}> \n\n        {/* main menu */}\n        <NavMenu langRestrict={langRestrict}\n              langChange={langChange}\n              orderBy={orderBy}\n              orderByChange={orderByChange}\n              totalItems={props.totalItems}\n              query={query}\n              onSearch={onSearch}\n              setQuery={setQuery}\n              favouritesBook={props.favouritesBook}\n        />\n\n\n        {/* Router */}\n        <React.Suspense fallback={<Loader active inline='centered' />}>\n          <Switch>\n\n            <Route path=\"/Messages\">\n              {/* <Messages /> */}\n            </Route>\n\n            <Route exact path=\"/favourites\">\n                <Favourites favouritesBook={props.favouritesBook}\n                            favouritesBookThunk={props.favouritesBookThunk}\n                />\n            </Route>\n\n            <Route exact path=\"/React_GoogleBooksAPI_gh_pages\">\n              <>\n                <MenuFilter filterChange={filterChange}\n                            filter={filter}\n                            printType={printType}\n                            printTypeChange={printTypeChange}\n                />\n                <BooksContainer books={props.books} \n                                favouritesBook={props.favouritesBook}\n                                favouritesBookThunk={props.favouritesBookThunk}\n                                />   \n              </>\n            </Route>\n\n            <Route path=\"/\">\n              <Redirect to=\"/React_GoogleBooksAPI_gh_pages\" />\n            </Route>\n\n          </Switch>\n        </React.Suspense>\n\n\n        {/* Scroll */}\n        <div>\n          {props.isLoading && <Loader active inline='centered' />}\n          {props.startIndex !== 0 && !props.isLoading && props.isError && (<div>\n            <div>Something went wrong...</div>\n            <button onClick={() => onClick()}>Try Again</button>\n          </div>)}\n        </div>\n\n      </section>\n    </container>\n  );\n}\n\n\nconst mapStateToProps = (state) => ({\n  books: state.booksPages.books,\n  maxResults: state.booksPages.maxResults,\n  startIndex: state.booksPages.startIndex,\n  isLoading: state.booksPages.isLoading,\n  isError: state.booksPages.isError,\n  totalItems: state.booksPages.totalItems,\n  favouritesBook: state.booksPages.favouritesBook, \n});\n\nexport default compose(\n    connect(mapStateToProps, {searchBooksThunk, favouritesBookThunk, updateFavouritesBookActionCreator}),\n    // withAuthRedirect\n  )(App);","D:\\del\\myprog\\src\\Redux\\store.js",["55"],"import React from 'react';\r\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport booksReducer from './booksReducer';\r\nimport logger from 'redux-logger';\r\n// import productList_reducer from './productList_reducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    booksPages: booksReducer,\r\n    // productList: productList_reducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","D:\\del\\myprog\\src\\Redux\\booksReducer.js",["56","57"],"import React from 'react'\r\nimport { booksAPI } from './../api/api';\r\n\r\nconst SET_BOOKS = 'SET_BOOKS' \r\nconst UPDATE_RESULT = 'UPDATE_RESULT'\r\nconst SET_TOTAL_ITEMS = 'SET_TOTAL_ITEMS' \r\nconst START_INDEX = 'START_INDEX'\r\nconst IS_LOADING = 'IS_LOADING' \r\nconst FREE_BOOKS = 'FREE_BOOKS' \r\nconst ADD_FAVOURITES_BOOKS = 'ADD_FAVOURITES_BOOKS' \r\nconst UPDATE_FAVOURITES_BOOKS = 'UPDATE_FAVOURITES_BOOKS' \r\n\r\nconst initialState = {\r\n  books: [],\r\n  totalItems: null,\r\n  maxResults: 5,\r\n  startIndex: 0,\r\n  isLoading: false,\r\n  isError: false,\r\n  favouritesBook: [], \r\n};\r\n\r\nconst booksReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_BOOKS:\r\n            return {\r\n                ...state, \r\n                books: [...action.payload]\r\n            };\r\n        case UPDATE_RESULT:\r\n            return {\r\n                ...state, \r\n                books: [...state.books, ...action.payload]\r\n            };\r\n        case START_INDEX:\r\n            return {\r\n                ...state,\r\n                startIndex: action.payload\r\n            };\r\n        case FREE_BOOKS:\r\n            return {\r\n                ...state,\r\n                startIndex: action.payload\r\n            };\r\n        case SET_TOTAL_ITEMS:\r\n            return {\r\n                ...state,\r\n                totalItems: action.payload\r\n            };\r\n        case IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload\r\n            };\r\n        case ADD_FAVOURITES_BOOKS:\r\n            return {\r\n                ...state,\r\n                favouritesBook: [... state.favouritesBook, action.payload]\r\n            };\r\n        case UPDATE_FAVOURITES_BOOKS:\r\n            return {\r\n                ...state,\r\n                favouritesBook: [...action.payload]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default booksReducer;\r\n\r\nexport const setBooksActionCreator = (payload) => ({type: SET_BOOKS, payload})\r\nexport const updateResultActionCreator = (payload) => ({type: UPDATE_RESULT, payload})\r\nexport const startIndexActionCreator = (payload) => ({type: START_INDEX, payload})\r\nexport const setTotalItemsActionCreator = (payload) => ({type: SET_TOTAL_ITEMS, payload})\r\nexport const isLoadingActionCreator = (payload) => ({type: IS_LOADING, payload})\r\nexport const addFavouritesBookActionCreator = (payload) => ({type: ADD_FAVOURITES_BOOKS, payload})\r\nexport const updateFavouritesBookActionCreator = (payload) => ({type: UPDATE_FAVOURITES_BOOKS, payload})\r\n\r\n\r\nexport const searchBooksThunk = (query, startIndex, filter0, printType0, orderBy0, langRestrict0) => async (dispatch, getState) => {\r\n   \r\n    dispatch(isLoadingActionCreator(true));\r\n\r\n    const maxResults = getState().booksPages.maxResults;\r\n    const filter = filter0 ? `filter=${filter0}` : '';\r\n    const printType = printType0 ? `printType=${printType0}` : '';\r\n    const orderBy = orderBy0 ? `orderBy=newest` : 'orderBy=relevance';\r\n    const langRestrict = langRestrict0 ? `langRestrict=uk` : '';\r\n\r\n    const response = await booksAPI.searchBooks(query, maxResults, startIndex, filter, printType, orderBy, langRestrict);\r\n\r\n    // if (response.status === 200) {\r\n    if (response.data.items) {\r\n\r\n        if (startIndex === 0) {\r\n            dispatch(setBooksActionCreator(response.data.items));\r\n        } else {\r\n            dispatch(updateResultActionCreator(response.data.items));\r\n        }\r\n        \r\n        dispatch(startIndexActionCreator(startIndex));\r\n        dispatch(setTotalItemsActionCreator(response.data.totalItems));\r\n        dispatch(isLoadingActionCreator(false));\r\n\r\n      }\r\n}\r\n\r\n\r\n\r\n\r\nexport const favouritesBookThunk = (id) => async (dispatch, getState) => {\r\n\r\n    const favouritesBook = getState().booksPages.favouritesBook;\r\n    const books = getState().booksPages.books;\r\n    const myFavouritesBooksLocalStorage = JSON.parse(localStorage.getItem('mybooks'));\r\n    const prevLocalStorage = myFavouritesBooksLocalStorage === null ? '' : myFavouritesBooksLocalStorage;\r\n\r\n    if (favouritesBook.find(el => el.id === id)) {\r\n        dispatch(updateFavouritesBookActionCreator(favouritesBook.filter(el => el.id !== id)));\r\n        localStorage.setItem('mybooks', JSON.stringify([...prevLocalStorage.filter(el => el.id !== id)]));\r\n    } else {\r\n        const newBook = books.find(el => el.id === id);\r\n        dispatch(addFavouritesBookActionCreator(newBook));\r\n        localStorage.setItem('mybooks', JSON.stringify([...prevLocalStorage, newBook]));\r\n    }\r\n\r\n}\r\n","D:\\del\\myprog\\src\\api\\api.js",["58"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = `AIzaSyCWJPlgc1bW_gHaGC6hYCtHeqonbVJwWvA`;\r\n\r\n// Пагінація\r\n// startIndex- Позиція в колекції, з якої слід починати. Індекс першого пункту - 0.\r\n// maxResults- Максимальна кількість результатів, які потрібно повернути. За замовчуванням 10, а максимально допустиме значення - 40.\r\n\r\n// FILTER\r\n// filter=free-ebooks - Обмежте результати безкоштовними електронними книгами Google.\r\n// filter=paid-ebooks - Обмежте результати для електронних книг Google із ціною придбання.\r\n// filter=full - Повертає результати лише тоді, коли весь текст можна переглянути. \r\n\r\n// new\r\n// relevance - Повертає результати в порядку релевантності пошукових термінів (це за замовчуванням).\r\n// orderBy=newest - Повертає результати в порядку останніх до найменш нещодавно опублікованих.\r\n\r\n// lang\r\n// langRestrict=uk\r\n\r\nconst instance = axios.create({\r\n  // withCredentials: true,\r\n  baseURL: 'https://www.googleapis.com/books/v1/',\r\n//   headers: {\r\n//     \"API-KEY\": \"AIzaSyCWJPlgc1bW_gHaGC6hYCtHeqonbVJwWvA\"\r\n//   },\r\n});\r\n\r\nexport const booksAPI = {\r\n  searchBooks(query, maxResults, startIndex, filter, printType, orderBy, langRestrict) {\r\n    // console.log(`https://www.googleapis.com/books/v1/volumes?q=${query}&${filter}&${printType}&${orderBy}&${langRestrict}&maxResults=${maxResults}&startIndex=${startIndex}&key=${API_KEY}`);\r\n    return instance.get(`volumes?q=${query}&${filter}&${printType}&${orderBy}&${langRestrict}&maxResults=${maxResults}&startIndex=${startIndex}&key=${API_KEY}`)\r\n      .then(response => response);\r\n  },\r\n  // // GET запиту, який отримує один том:-----------------------------------\r\n  // searchFreeBooks(query) {\r\n  //   return instance.get(`volumes/zyTCAlFPjgYC?key=${API_KEY}`)\r\n  //     .then(response => response);\r\n  // },\r\n }\r\n\r\n\r\n\r\n","D:\\del\\myprog\\src\\Components\\BooksContainer.js",[],"D:\\del\\myprog\\src\\Components\\NavMenu.js",[],"D:\\del\\myprog\\src\\Components\\Books.js",[],"D:\\del\\myprog\\src\\Components\\MenuFilter.js",[],"D:\\del\\myprog\\src\\Components\\Favourites.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":25,"column":5,"nodeType":"65","endLine":25,"endColumn":7,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"64","line":35,"column":6,"nodeType":"65","endLine":35,"endColumn":8,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":58,"column":37,"nodeType":"74","messageId":"75","endLine":58,"endColumn":38,"fix":"76"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["79"],["80"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"81","text":"82"},"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"83","fix":"85"},[1611,1612],"","Update the dependencies array to be: [props]",{"range":"86","text":"87"},{"range":"88","text":"87"},[964,966],"[props]",[1199,1201]]